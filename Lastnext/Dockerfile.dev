# Development Dockerfile for Next.js with proper permissions
FROM node:20.17.0-alpine

# Install latest npm and system dependencies
RUN npm install -g npm@11.4.1 && \
    apk add --no-cache libc6-compat curl postgresql-client && \
    rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 --ingroup nodejs nextjs

# Copy package files first for better Docker layer caching
COPY package.json package-lock.json* ./

# Install dependencies
RUN npm ci --legacy-peer-deps --no-audit --no-fund

# Copy source code with proper ownership
COPY --chown=nextjs:nodejs . .

# Create .next directory structure with proper permissions
RUN mkdir -p /app/.next/cache \
             /app/.next/types \
             /app/.next/server \
             /app/.next/static \
             /app/.next/server/app && \
    chown -R nextjs:nodejs /app && \
    chmod -R 755 /app/.next

# Set development environment
ENV NODE_ENV=development \
    NEXT_TELEMETRY_DISABLED=1 \
    PORT=3000 \
    HOSTNAME="0.0.0.0"

# Copy and set up development entrypoint
COPY --chown=nextjs:nodejs dev-entrypoint.sh /app/dev-entrypoint.sh
RUN chmod +x /app/dev-entrypoint.sh

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Use development entrypoint with Next.js dev server
CMD ["/app/dev-entrypoint.sh", "npm", "run", "dev"]